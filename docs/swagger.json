{
    "swagger": "2.0",
    "info": {
        "description": "API for Moscow City Hack 2022.",
        "title": "hack API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/broadcastShifts/": {
            "get": {
                "description": "Рассылка обновления расписания веб-сокет",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ws"
                ],
                "summary": "Рассылка обновления расписания по веб-сокет",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ShiftsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/login/": {
            "post": {
                "description": "Авторизация пользователя с логином и паролем",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "inn",
                        "name": "inn",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AuthResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/scheduler/": {
            "get": {
                "description": "Получение доступных предложений",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Получение доступных предложений",
                "parameters": [
                    {
                        "maxLength": 8,
                        "minLength": 8,
                        "type": "string",
                        "description": "day",
                        "name": "day",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ShiftsResponse"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.ShiftsResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/token/": {
            "post": {
                "description": "Рефреш токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Рефреш токен",
                "parameters": [
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "refresh_token",
                        "name": "offerId",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AuthResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/ws/": {
            "get": {
                "description": "Обрабатываем WebSocket",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ws"
                ],
                "summary": "Обрабатываем WebSocket",
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AuthResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "AccessToken",
                    "type": "string"
                },
                "refresh_token": {
                    "description": "RefreshToken",
                    "type": "string"
                }
            }
        },
        "model.Offer": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "isAvailableByLimit": {
                    "type": "boolean"
                },
                "isAvailableForTrainees": {
                    "type": "boolean"
                },
                "isEditable": {
                    "type": "boolean"
                },
                "isMine": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "limitFact": {
                    "type": "integer"
                },
                "offerId": {
                    "type": "integer"
                },
                "waveId": {
                    "type": "integer"
                },
                "waveStart": {
                    "type": "string"
                }
            }
        },
        "model.ResponseError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.ShiftsResponse": {
            "type": "object",
            "properties": {
                "offers": {
                    "description": "Массив предложний",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Offer"
                    }
                }
            }
        }
    }
}